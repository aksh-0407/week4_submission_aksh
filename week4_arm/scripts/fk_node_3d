#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from sensor_msgs.msg import JointState
from geometry_msgs.msg import Point
import math

class FKNode3D(Node):
    def __init__(self):
        super().__init__('fk_node_3d')

        self.L1 = 2.0
        self.L2 = 1.5

        self.subscription = self.create_subscription(
            JointState,
            '/joint_states',
            self.joint_state_callback,
            10
        )

        self.publisher = self.create_publisher(Point, '/end_effector_position', 10)
        self.get_logger().info('3D FK Node with Base Yaw started.')

    def joint_state_callback(self, msg):
        if len(msg.position) < 3:
            self.get_logger().warn("Expected 3 joint angles [Î¸0, Î¸1, Î¸2].")
            return

        theta0 = msg.position[0]  # base yaw (Z-axis)
        theta1 = msg.position[1] + math.pi / 2.0  # shoulder pitch
        theta2 = msg.position[2]  # elbow pitch

        # Planar FK (x', z')
        x_p = self.L1 * math.cos(theta1) + self.L2 * math.cos(theta1 + theta2)
        z = self.L1 * math.sin(theta1) + self.L2 * math.sin(theta1 + theta2)

        # Rotate around Z-axis by theta0
        x = x_p * math.cos(theta0)
        y = x_p * math.sin(theta0)

        point = Point()
        point.x = x
        point.y = y
        point.z = z

        self.publisher.publish(point)
        self.get_logger().info(f"ðŸ“¤ 3D EE Position: x={x:.2f}, y={y:.2f}, z={z:.2f}")

def main(args=None):
    rclpy.init(args=args)
    node = FKNode3D()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
